<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.AccountTransactionMapper">

    <resultMap type="AccountTransaction" id="AccountTransactionResult">
        <result property="id"    column="id"    />
        <result property="accountId"    column="account_id"    />
        <result property="refId"    column="ref_id"    />
        <result property="type"    column="type"    />
        <result property="fromAddress"    column="from_address"    />
        <result property="toAddress"    column="to_address"    />
        <result property="amount"    column="amount"    />
        <result property="realAmount"    column="real_amount"    />
        <result property="fee"    column="fee"    />
        <result property="chainType"    column="chain_type"    />
        <result property="coinId"    column="coin_id"    />
        <result property="coinName"    column="coin_name"    />
    </resultMap>

    <sql id="selectAccountTransactionVo">
        select id, account_id, ref_id, type, from_address, to_address, amount, real_amount, fee, chain_type, coinId, coinName from account_transaction
    </sql>

    <select id="selectAccountTransactionList" parameterType="AccountTransaction" resultMap="AccountTransactionResult">
        <include refid="selectAccountTransactionVo"/>
        <where>
            <if test="accountId != null "> and account_id = #{accountId}</if>
            <if test="refId != null "> and ref_id = #{refId}</if>
            <if test="type != null  and type != ''"> and type = #{type}</if>
            <if test="fromAddress != null  and fromAddress != ''"> and from_address = #{fromAddress}</if>
            <if test="toAddress != null  and toAddress != ''"> and to_address = #{toAddress}</if>
            <if test="amount != null "> and amount = #{amount}</if>
            <if test="realAmount != null "> and real_amount = #{realAmount}</if>
            <if test="fee != null "> and fee = #{fee}</if>
            <if test="chainType != null  and chainType != ''"> and chain_type = #{chainType}</if>
            <if test="coinId != null "> and coin_id = #{coinId}</if>
            <if test="coinName != null  and coinName != ''"> and coin_name like concat('%', #{coinName}, '%')</if>
        </where>
    </select>

    <select id="selectAccountTransactionById" parameterType="Long" resultMap="AccountTransactionResult">
        <include refid="selectAccountTransactionVo"/>
        where id = #{id}
    </select>

    <insert id="insertAccountTransaction" parameterType="AccountTransaction" useGeneratedKeys="true" keyProperty="id">
        insert into account_transaction
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="accountId != null">account_id,</if>
            <if test="refId != null">ref_id,</if>
            <if test="type != null and type != ''">type,</if>
            <if test="fromAddress != null and fromAddress != ''">from_address,</if>
            <if test="toAddress != null and toAddress != ''">to_address,</if>
            <if test="amount != null">amount,</if>
            <if test="realAmount != null">real_amount,</if>
            <if test="fee != null">fee,</if>
            <if test="chainType != null and chainType != ''">chain_type,</if>
            <if test="coinId != null">coin_id,</if>
            <if test="coinName != null">coin_name,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="accountId != null">#{accountId},</if>
            <if test="refId != null">#{refId},</if>
            <if test="type != null and type != ''">#{type},</if>
            <if test="fromAddress != null and fromAddress != ''">#{fromAddress},</if>
            <if test="toAddress != null and toAddress != ''">#{toAddress},</if>
            <if test="amount != null">#{amount},</if>
            <if test="realAmount != null">#{realAmount},</if>
            <if test="fee != null">#{fee},</if>
            <if test="chainType != null and chainType != ''">#{chainType},</if>
            <if test="coinId != null">#{coinId},</if>
            <if test="coinName != null">#{coinName},</if>
        </trim>
    </insert>

    <update id="updateAccountTransaction" parameterType="AccountTransaction">
        update account_transaction
        <trim prefix="SET" suffixOverrides=",">
            <if test="accountId != null">account_id = #{accountId},</if>
            <if test="refId != null">ref_id = #{refId},</if>
            <if test="type != null and type != ''">type = #{type},</if>
            <if test="fromAddress != null and fromAddress != ''">from_address = #{fromAddress},</if>
            <if test="toAddress != null and toAddress != ''">to_address = #{toAddress},</if>
            <if test="amount != null">amount = #{amount},</if>
            <if test="realAmount != null">real_amount = #{realAmount},</if>
            <if test="fee != null">fee = #{fee},</if>
            <if test="chainType != null and chainType != ''">chain_type = #{chainType},</if>
            <if test="coinId != null">coin_id = #{coinId},</if>
            <if test="coinName != null">coin_name = #{coinName},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteAccountTransactionById" parameterType="Long">
        delete from account_transaction where id = #{id}
    </delete>

    <delete id="deleteAccountTransactionByIds" parameterType="String">
        delete from account_transaction where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>
